import { actions, useAppState } from '../context/AppStateContext';
const { state, dispatch } = useAppState();

- timecode input change
- match timecode to seek handle drag
- click anywhere on the waveform to seek to that position
- should not drag handle while playing
- cannot drag handle before or after audio area
- seek handle drag issue
	- not a matter of speed
	- not a matter of where on the handle you drag
	- not a matter of click, then wait, then drag
	- removing waveform doesn't help
	- making handle bigger doesn't help
	- 


- auto scroll horizontally with playback
	- there needs to be logic that detects when the seekHandle reaches the end of the current view, no matter where the scroll position is. 
	- can you calculate based on current scroll position and current view width, where is the end of the view area?
	- CALCULATE THE NEXT BREAKPOINT POSITION. IF CUR_POS > NEXT_BREAKPOINT scroll, and update next_breakpoint
	// what if you scroll while audio is playing?
	// reset scroll state when stopping
	// what happens when you pause?
	// shouldn't scroll position be set absolutely instead of incrementally?
	// what if you change window width: while it's playing, while it's paused, while it's stopped
	// are there inconsistentcies with longer audio files?
	// what about when you drag the handle

	// should it be based on 
- timecode
- draggable seek handle

- why is seek handle flashing on animation
- seek handle still lags sometimes (should you try a deploy?)



Typescript cheat sheet:
	onClickHandler: (e: React.MouseEvent<HTMLButtonElement>) => void;
	

waveform grey 423c3b
background grey 161616
play red df4440
timecode grey 2e2e2e
playhead blue 02b0fe


Features
- Audio playback that follows with the waveform.
- Zoom in and out of waveform.
- Select a portion of the waveform to see an average of values
- Playback auto-updates values.
- Data to display:
	- Volume
	- Pitch percentage
- Cool visualization.
	- Shows volume and pitch content using different params.
- Listen to microphone input and react.

Advanced Features
- Can you generate chord progression?
- Can you generate sheet music based on this? 

Issues
- Optimizing visualization of waveform?
- 


brightred f52c40
darkred 800924
maroon 512330
navy 232e45
darkgrey 161616