import { actions, useAppState } from '../context/AppStateContext';
const { state, dispatch } = useAppState();

- Create component folder structure
- set up CI/CD and testing library

Finetuning playback
- waveform is not going down to 0 amplitude...
- on drag zoom handle, use debounce? 
- should there be horizontal margins to to make it easier to drag to the end?
- global mouseUp detection for selectionDrag?
- hover marker length is slightly off
- make a logo 

- test deploy for intermediate portfolio item





Typescript cheat sheet:
	onClickHandler: (e: React.MouseEvent<HTMLButtonElement>) => void;
	

waveform grey 423c3b
background grey 161616
play red df4440
timecode grey 2e2e2e
playhead blue 02b0fe


Features
- Audio playback that follows with the waveform.
- Zoom in and out of waveform.
- Select a portion of the waveform to see an average of values
- Playback auto-updates values.
- Data to display:
	- Volume
	- Pitch percentage
- Cool visualization.
	- Shows volume and pitch content using different params.
- Listen to microphone input and react.

Advanced Features
- Can you generate chord progression?
- Can you generate sheet music based on this? 

Issues
- Optimizing visualization of waveform?
- 


brightred f52c40
darkred 800924
maroon 512330
navy 232e45
darkgrey 161616